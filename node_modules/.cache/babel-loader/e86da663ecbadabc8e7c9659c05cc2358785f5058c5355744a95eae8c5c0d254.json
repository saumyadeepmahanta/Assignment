{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\movie_search\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Star from \"./Star\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n  const fetchMovie = async movieName => {\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\",\n          Plot: \"\",\n          Poster: \"\"\n        });\n      } else {\n        setMovieData(finalData);\n      }\n      console.log(finalData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleSearch = () => {\n    fetchMovie(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for a movie\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), movieData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieData.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), movieData.Plot && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieData.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this), movieData.Poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movieData.Poster,\n          alt: `${movieData.Title} Poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No poster available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Star, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wHFe2jAd+DDWoM6NkSEBwVESE+g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Star","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","movieData","setMovieData","fetchMovie","movieName","URL","response","fetch","finalData","json","Response","Title","Plot","Poster","console","log","err","handleSearch","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Assignment/movie_search/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Star from \"./Star\";\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n\n  const fetchMovie = async (movieName) => {\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\",\n          Plot: \"\",\n          Poster: \"\",\n        });\n      } else {\n        setMovieData(finalData);\n      }\n      console.log(finalData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchMovie(query);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for a movie\"\n        className=\"search-input\"\n      />\n      <button onClick={handleSearch} className=\"search-button\">\n        Search\n      </button>\n      {movieData && (\n        <>\n          <div className=\"card\">\n            <h1>{movieData.Title}</h1>\n            {movieData.Plot && <p>{movieData.Plot}</p>}\n            {movieData.Poster ? (\n              <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n            ) : (\n              <p>No poster available</p>\n            )}\n          </div>\n          <div>\n            <Star />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}