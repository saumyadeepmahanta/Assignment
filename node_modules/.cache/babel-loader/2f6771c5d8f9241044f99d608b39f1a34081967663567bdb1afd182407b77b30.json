{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from \"react-router-dom\";\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setmovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n  const fetchMovie = async movieName => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n      if (finalData.Response === \"False\") {\n        setmovieData({\n          Title: \"No movie found\"\n        });\n      } else {\n        setmovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchMovie(query);\n  };\n  const handleFavoriteToggle = movie => {\n    const isFavorite = favorites.some(fav => fav.imdbID === movie.imdbID);\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(fav => fav.imdbID !== movie.imdbID);\n      setFavorites(updatedFavorites);\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/favorites\",\n          children: \"View Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            query: query,\n            setQuery: setQuery,\n            handleSearch: handleSearch,\n            loading: loading,\n            setLoading: setLoading,\n            movieData: movieData,\n            favorites: favorites,\n            handleFavoriteToggle: handleFavoriteToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:title\",\n          element: /*#__PURE__*/_jsxDEV(MovieDetailsPage, {\n            favorites: favorites,\n            handleFavoriteToggle: handleFavoriteToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favorites\",\n          element: /*#__PURE__*/_jsxDEV(Favorites, {\n            favorites: favorites,\n            handleFavoriteToggle: handleFavoriteToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"a9UHvwLZinA6zsCeBhgniwWhhMI=\");\n_c = App;\nconst Home = ({\n  query,\n  setQuery,\n  handleSearch,\n  loading,\n  setLoading,\n  movieData,\n  favorites,\n  handleFavoriteToggle\n}) => {\n  const handleMovieCardClick = movie => {\n    setmovieData(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for a movie\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SearchResults, {\n      movieData: movieData,\n      favorites: favorites,\n      handleFavoriteToggle: handleFavoriteToggle,\n      handleMovieCardClick: handleMovieCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Home;\nconst SearchResults = ({\n  movieData,\n  favorites,\n  handleFavoriteToggle,\n  handleMovieCardClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results\",\n    children: movieData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleMovieCardClick(movieData),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-container\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          isFavorite: favorites.some(fav => fav.imdbID === movieData.imdbID),\n          onToggle: () => handleFavoriteToggle(movieData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movieData.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movieData.Released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), movieData.Poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieData.Poster,\n        alt: `${movieData.Title} Poster`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No poster available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_c3 = SearchResults;\nconst MovieDetailsPage = ({\n  favorites,\n  handleFavoriteToggle\n}) => {\n  _s2();\n  let {\n    title\n  } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const URL = `http://www.omdbapi.com/?t=${title}&apikey=e45311a3`;\n        const response = await fetch(URL);\n        const finalData = await response.json();\n        if (finalData.Response === \"False\") {\n          setMovieData({\n            Title: \"No movie found\"\n          });\n        } else {\n          setMovieData(finalData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [title]);\n  const handleMovieDetailsFavoriteToggle = () => {\n    handleFavoriteToggle(movieData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this) : movieData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-container\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          isFavorite: favorites.some(fav => fav.imdbID === movieData.imdbID),\n          onToggle: handleMovieDetailsFavoriteToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movieData.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movieData.Released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), movieData.Poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieData.Poster,\n        alt: `${movieData.Title} Poster`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No poster available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movie details available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s2(MovieDetailsPage, \"7usCDMtbojobGp2js7BcNWI+GDM=\", false, function () {\n  return [useParams];\n});\n_c4 = MovieDetailsPage;\nconst Favorites = ({\n  favorites,\n  handleFavoriteToggle\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorites-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), favorites.length > 0 ? favorites.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-container\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          isFavorite: true,\n          onToggle: () => handleFavoriteToggle(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this), movie.Poster && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: `${movie.Title} Poster`,\n        className: \"card-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }, this)]\n    }, movie.imdbID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No favorites added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Favorites;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"SearchResults\");\n$RefreshReg$(_c4, \"MovieDetailsPage\");\n$RefreshReg$(_c5, \"Favorites\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","useParams","Star","Loader","MovieDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","movieData","setmovieData","favorites","setFavorites","savedFavorites","JSON","parse","localStorage","getItem","loading","setLoading","setItem","stringify","fetchMovie","movieName","URL","response","fetch","finalData","json","Response","Title","err","console","log","handleSearch","handleFavoriteToggle","movie","isFavorite","some","fav","imdbID","updatedFavorites","filter","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Home","MovieDetailsPage","Favorites","_c","handleMovieCardClick","type","value","onChange","e","target","placeholder","onClick","SearchResults","_c2","onToggle","Released","Poster","src","alt","_c3","_s2","title","setMovieData","fetchMovieDetails","handleMovieDetailsFavoriteToggle","_c4","length","map","_c5","$RefreshReg$"],"sources":["C:/Assignment/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setmovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const fetchMovie = async (movieName) => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n\n      if (finalData.Response === \"False\") {\n        setmovieData({\n          Title: \"No movie found\",\n        });\n      } else {\n        setmovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchMovie(query);\n  };\n\n  const handleFavoriteToggle = (movie) => {\n    const isFavorite = favorites.some((fav) => fav.imdbID === movie.imdbID);\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(\n        (fav) => fav.imdbID !== movie.imdbID\n      );\n      setFavorites(updatedFavorites);\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <nav>\n          <Link to=\"/\">Home</Link> <Link to=\"/favorites\">View Favorites</Link>\n        </nav>\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                query={query}\n                setQuery={setQuery}\n                handleSearch={handleSearch}\n                loading={loading}\n                setLoading={setLoading}\n                movieData={movieData}\n                favorites={favorites}\n                handleFavoriteToggle={handleFavoriteToggle}\n              />\n            }\n          />\n          <Route\n            path=\"/movie/:title\"\n            element={\n              <MovieDetailsPage\n                favorites={favorites}\n                handleFavoriteToggle={handleFavoriteToggle}\n              />\n            }\n          />\n          <Route\n            path=\"/favorites\"\n            element={\n              <Favorites\n                favorites={favorites}\n                handleFavoriteToggle={handleFavoriteToggle}\n              />\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nconst Home = ({\n  query,\n  setQuery,\n  handleSearch,\n  loading,\n  setLoading,\n  movieData,\n  favorites,\n  handleFavoriteToggle,\n}) => {\n  const handleMovieCardClick = (movie) => {\n    setmovieData(movie);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for a movie\"\n        className=\"search-input\"\n      />\n      <button onClick={handleSearch} className=\"search-button\">\n        Search\n      </button>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <SearchResults\n          movieData={movieData}\n          favorites={favorites}\n          handleFavoriteToggle={handleFavoriteToggle}\n          handleMovieCardClick={handleMovieCardClick}\n        />\n      )}\n    </>\n  );\n};\n\nconst SearchResults = ({\n  movieData,\n  favorites,\n  handleFavoriteToggle,\n  handleMovieCardClick,\n}) => {\n  return (\n    <div className=\"search-results\">\n      {movieData && (\n        <div className=\"card\" onClick={() => handleMovieCardClick(movieData)}>\n          <div className=\"star-container\">\n            <Star\n              isFavorite={favorites.some(\n                (fav) => fav.imdbID === movieData.imdbID\n              )}\n              onToggle={() => handleFavoriteToggle(movieData)}\n            />\n          </div>\n          <h1>{movieData.Title}</h1>\n          <p>Release Date: {movieData.Released}</p>\n          {movieData.Poster ? (\n            <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n          ) : (\n            <p>No poster available</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MovieDetailsPage = ({ favorites, handleFavoriteToggle }) => {\n  let { title } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const URL = `http://www.omdbapi.com/?t=${title}&apikey=e45311a3`;\n        const response = await fetch(URL);\n        const finalData = await response.json();\n\n        if (finalData.Response === \"False\") {\n          setMovieData({\n            Title: \"No movie found\",\n          });\n        } else {\n          setMovieData(finalData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [title]);\n\n  const handleMovieDetailsFavoriteToggle = () => {\n    handleFavoriteToggle(movieData);\n  };\n\n  return (\n    <div className=\"movie-details\">\n      {loading ? (\n        <Loader />\n      ) : movieData ? (\n        <>\n          <div className=\"star-container\">\n            <Star\n              isFavorite={favorites.some(\n                (fav) => fav.imdbID === movieData.imdbID\n              )}\n              onToggle={handleMovieDetailsFavoriteToggle}\n            />\n          </div>\n          <h1>{movieData.Title}</h1>\n          <p>Release Date: {movieData.Released}</p>\n          {movieData.Poster ? (\n            <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n          ) : (\n            <p>No poster available</p>\n          )}\n        </>\n      ) : (\n        <p>No movie details available.</p>\n      )}\n    </div>\n  );\n};\n\nconst Favorites = ({ favorites, handleFavoriteToggle }) => {\n  return (\n    <div className=\"favorites-list\">\n      <h2>Favorites</h2>\n      {favorites.length > 0 ? (\n        favorites.map((movie) => (\n          <div key={movie.imdbID} className=\"card\">\n            <div className=\"star-container\">\n              <Star\n                isFavorite={true}\n                onToggle={() => handleFavoriteToggle(movie)}\n              />\n            </div>\n            <h3>{movie.Title}</h3>\n            {movie.Poster && (\n              <img\n                src={movie.Poster}\n                alt={`${movie.Title} Poster`}\n                className=\"card-container\"\n              />\n            )}\n          </div>\n        ))\n      ) : (\n        <p>No favorites added yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,SAAS,QACJ,kBAAkB;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,MAAM;IAC/C,MAAMuB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}