{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n  const fetchMovie = async movieName => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\"\n        });\n      } else {\n        setMovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchMovie(query);\n    setShowFavorites(false);\n  };\n  const handleFavoriteToggle = movie => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.find(fav => fav.imdbID === movie.imdbID)) {\n        return prevFavorites.filter(fav => fav.imdbID !== movie.imdbID);\n      } else {\n        return [...prevFavorites, movie];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Search for a movie\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            className: \"search-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFavorites(true),\n            className: \"favorites-button\",\n            children: \"View Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this) : showFavorites ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorites-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Favorites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), favorites.length > 0 ? favorites.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              onClick: () => {\n                setMovieData(movie);\n                window.location.href = `/movie/${encodeURIComponent(movie.Title)}`;\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"star-container\",\n                children: /*#__PURE__*/_jsxDEV(Star, {\n                  isFavorite: true,\n                  onToggle: () => handleFavoriteToggle(movie)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: movie.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), movie.Poster && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movie.Poster,\n                alt: `${movie.Title} Poster`,\n                className: \"card-container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 25\n              }, this)]\n            }, movie.imdbID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No favorites added yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results\",\n            children: movieData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"star-container\",\n                children: /*#__PURE__*/_jsxDEV(Star, {\n                  isFavorite: !!favorites.find(fav => fav.imdbID === movieData.imdbID),\n                  onToggle: () => handleFavoriteToggle(movieData)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: movieData.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Release Date: \", movieData.Released]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), movieData.Poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movieData.Poster,\n                alt: `${movieData.Title} Poster`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No poster available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:title\",\n          children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n            movieData: movieData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cFlGmCJOk8bp/01Rty+P+tgpvAc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Switch","Route","Star","Loader","MovieDetails","jsxDEV","_jsxDEV","App","_s","query","setQuery","movieData","setMovieData","favorites","setFavorites","savedFavorites","JSON","parse","localStorage","getItem","showFavorites","setShowFavorites","loading","setLoading","setItem","stringify","fetchMovie","movieName","URL","response","fetch","finalData","json","Response","Title","err","console","log","handleSearch","handleFavoriteToggle","movie","prevFavorites","find","fav","imdbID","filter","children","className","Routes","path","exact","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","window","location","href","encodeURIComponent","isFavorite","onToggle","Poster","src","alt","Released","_c","$RefreshReg$"],"sources":["C:/Assignment/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const fetchMovie = async (movieName) => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\",\n        });\n      } else {\n        setMovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchMovie(query);\n    setShowFavorites(false);\n  };\n\n  const handleFavoriteToggle = (movie) => {\n    setFavorites((prevFavorites) => {\n      if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n        return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n      } else {\n        return [...prevFavorites, movie];\n      }\n    });\n  };\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Routes>\n          <Route path=\"/\" exact>\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Search for a movie\"\n              className=\"search-input\"\n            />\n            <button onClick={handleSearch} className=\"search-button\">\n              Search\n            </button>\n            <button\n              onClick={() => setShowFavorites(true)}\n              className=\"favorites-button\"\n            >\n              View Favorites\n            </button>\n            {loading ? (\n              <Loader />\n            ) : showFavorites ? (\n              <div className=\"favorites-list\">\n                <h2>Favorites</h2>\n                {favorites.length > 0 ? (\n                  favorites.map((movie) => (\n                    <div\n                      key={movie.imdbID}\n                      className=\"card\"\n                      onClick={() => {\n                        setMovieData(movie);\n                        window.location.href = `/movie/${encodeURIComponent(\n                          movie.Title\n                        )}`;\n                      }}\n                    >\n                      <div className=\"star-container\">\n                        <Star\n                          isFavorite={true}\n                          onToggle={() => handleFavoriteToggle(movie)}\n                        />\n                      </div>\n                      <h3>{movie.Title}</h3>\n                      {movie.Poster && (\n                        <img\n                          src={movie.Poster}\n                          alt={`${movie.Title} Poster`}\n                          className=\"card-container\"\n                        />\n                      )}\n                    </div>\n                  ))\n                ) : (\n                  <p>No favorites added yet.</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"search-results\">\n                {movieData && (\n                  <div className=\"card\">\n                    <div className=\"star-container\">\n                      <Star\n                        isFavorite={\n                          !!favorites.find(\n                            (fav) => fav.imdbID === movieData.imdbID\n                          )\n                        }\n                        onToggle={() => handleFavoriteToggle(movieData)}\n                      />\n                    </div>\n                    <h1>{movieData.Title}</h1>\n                    <p>Release Date: {movieData.Released}</p>\n\n                    {movieData.Poster ? (\n                      <img\n                        src={movieData.Poster}\n                        alt={`${movieData.Title} Poster`}\n                      />\n                    ) : (\n                      <p>No poster available</p>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </Route>\n          <Route path=\"/movie/:title\">\n            <MovieDetails movieData={movieData} />\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,MAAM;IAC/C,MAAMmB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACpE,OAAOJ,cAAc,GAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}