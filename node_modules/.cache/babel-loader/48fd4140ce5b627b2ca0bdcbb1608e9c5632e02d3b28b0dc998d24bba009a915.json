{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from \"react-router-dom\"; // Import necessary components from react-router-dom\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n  const fetchMovie = async movieName => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\"\n        });\n      } else {\n        setMovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchMovie(query);\n    setShowFavorites(false);\n  };\n  const handleFavoriteToggle = movie => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.find(fav => fav.imdbID === movie.imdbID)) {\n        return prevFavorites.filter(fav => fav.imdbID !== movie.imdbID);\n      } else {\n        return [...prevFavorites, movie];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            query: query,\n            setQuery: setQuery,\n            handleSearch: handleSearch,\n            showFavorites: showFavorites,\n            setShowFavorites: setShowFavorites,\n            favorites: favorites,\n            loading: loading,\n            setLoading: setLoading,\n            movieData: movieData,\n            setMovieData: setMovieData,\n            handleFavoriteToggle: handleFavoriteToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:title\",\n          element: /*#__PURE__*/_jsxDEV(MovieDetails, {\n            movieData: movieData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n\n// Home component to render content when path=\"/\" is matched\n_s(App, \"cFlGmCJOk8bp/01Rty+P+tgpvAc=\");\n_c = App;\nfunction Home({\n  query,\n  setQuery,\n  handleSearch,\n  showFavorites,\n  setShowFavorites,\n  favorites,\n  loading,\n  setLoading,\n  movieData,\n  setMovieData,\n  handleFavoriteToggle\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for a movie\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowFavorites(true),\n      className: \"favorites-button\",\n      children: \"View Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this) : showFavorites ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), favorites.length > 0 ? favorites.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${encodeURIComponent(movie.Title)}`,\n          className: \"card-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"star-container\",\n            children: /*#__PURE__*/_jsxDEV(Star, {\n              isFavorite: true,\n              onToggle: () => handleFavoriteToggle(movie)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this), movie.Poster && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: `${movie.Title} Poster`,\n            className: \"card-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No favorites added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : movieData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-container\",\n          children: /*#__PURE__*/_jsxDEV(Star, {\n            isFavorite: !!favorites.find(fav => fav.imdbID === movieData.imdbID),\n            onToggle: () => handleFavoriteToggle(movieData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieData.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movieData.Released]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this), movieData.Poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movieData.Poster,\n          alt: `${movieData.Title} Poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No poster available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Home;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Link","Navigate","Star","Loader","MovieDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","movieData","setMovieData","favorites","setFavorites","savedFavorites","JSON","parse","localStorage","getItem","showFavorites","setShowFavorites","loading","setLoading","setItem","stringify","fetchMovie","movieName","URL","response","fetch","finalData","json","Response","Title","err","console","log","handleSearch","handleFavoriteToggle","movie","prevFavorites","find","fav","imdbID","filter","children","className","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","_c","type","value","onChange","e","target","placeholder","onClick","length","map","to","encodeURIComponent","isFavorite","onToggle","Poster","src","alt","Released","_c2","$RefreshReg$"],"sources":["C:/Assignment/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import Star from \"./Star\";\n// import Loader from \"./Loader\";\n\n// function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movieData, setMovieData] = useState(null);\n//   const [favorites, setFavorites] = useState(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n//     return savedFavorites ? savedFavorites : [];\n//   });\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n//     if (savedFavorites) {\n//       setFavorites(savedFavorites);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchMovie = async (movieName) => {\n//     setLoading(true);\n//     try {\n//       const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n//       const response = await fetch(URL);\n//       const finalData = await response.json();\n\n//       if (finalData.Response === \"False\") {\n//         setMovieData({\n//           Title: \"No movie found\",\n//         });\n//       } else {\n//         setMovieData(finalData);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     fetchMovie(query);\n//     setShowFavorites(false);\n//   };\n\n//   const handleFavoriteToggle = (movie) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n//         return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n//       } else {\n//         return [...prevFavorites, movie];\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search for a movie\"\n//         className=\"search-input\"\n//       />\n//       <button onClick={handleSearch} className=\"search-button\">\n//         Search\n//       </button>\n//       <button\n//         onClick={() => setShowFavorites(true)}\n//         className=\"favorites-button\"\n//       >\n//         View Favorites\n//       </button>\n//       {loading ? (\n//         <Loader />\n//       ) : showFavorites ? (\n//         <div className=\"favorites-list\">\n//           <h2>Favorites</h2>\n//           {favorites.length > 0 ? (\n//             favorites.map((movie) => (\n//               <div key={movie.imdbID} className=\"card\">\n//                 <div className=\"star-container\">\n//                   <Star\n//                     isFavorite={true}\n//                     onToggle={() => handleFavoriteToggle(movie)}\n//                   />\n//                 </div>\n//                 <h3>{movie.Title}</h3>\n//                 {movie.Poster && (\n//                   <img\n//                     src={movie.Poster}\n//                     alt={`${movie.Title} Poster`}\n//                     className=\"card-container\"\n//                   />\n//                 )}\n//               </div>\n//             ))\n//           ) : (\n//             <p>No favorites added yet.</p>\n//           )}\n//         </div>\n//       ) : (\n//         movieData && (\n//           <div className=\"card\">\n//             <div className=\"star-container\">\n//               <Star\n//                 isFavorite={\n//                   !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n//                 }\n//                 onToggle={() => handleFavoriteToggle(movieData)}\n//               />\n//             </div>\n//             <h1>{movieData.Title}</h1>\n//             <p>Release Date: {movieData.Released}</p>\n\n//             {movieData.Poster ? (\n//               <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n//             ) : (\n//               <p>No poster available</p>\n//             )}\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from \"react-router-dom\"; // Import necessary components from react-router-dom\nimport Star from \"./Star\";\nimport Loader from \"./Loader\";\nimport MovieDetails from \"./movieDetails\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    return savedFavorites ? savedFavorites : [];\n  });\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (savedFavorites) {\n      setFavorites(savedFavorites);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const fetchMovie = async (movieName) => {\n    setLoading(true);\n    try {\n      const URL = `http://www.omdbapi.com/?t=${movieName}&apikey=e45311a3`;\n      const response = await fetch(URL);\n      const finalData = await response.json();\n\n      if (finalData.Response === \"False\") {\n        setMovieData({\n          Title: \"No movie found\",\n        });\n      } else {\n        setMovieData(finalData);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchMovie(query);\n    setShowFavorites(false);\n  };\n\n  const handleFavoriteToggle = (movie) => {\n    setFavorites((prevFavorites) => {\n      if (prevFavorites.find((fav) => fav.imdbID === movie.imdbID)) {\n        return prevFavorites.filter((fav) => fav.imdbID !== movie.imdbID);\n      } else {\n        return [...prevFavorites, movie];\n      }\n    });\n  };\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                query={query}\n                setQuery={setQuery}\n                handleSearch={handleSearch}\n                showFavorites={showFavorites}\n                setShowFavorites={setShowFavorites}\n                favorites={favorites}\n                loading={loading}\n                setLoading={setLoading}\n                movieData={movieData}\n                setMovieData={setMovieData}\n                handleFavoriteToggle={handleFavoriteToggle}\n              />\n            }\n          />\n          <Route\n            path=\"/movie/:title\"\n            element={<MovieDetails movieData={movieData} />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\n// Home component to render content when path=\"/\" is matched\nfunction Home({\n  query,\n  setQuery,\n  handleSearch,\n  showFavorites,\n  setShowFavorites,\n  favorites,\n  loading,\n  setLoading,\n  movieData,\n  setMovieData,\n  handleFavoriteToggle,\n}) {\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for a movie\"\n        className=\"search-input\"\n      />\n      <button onClick={handleSearch} className=\"search-button\">\n        Search\n      </button>\n      <button\n        onClick={() => setShowFavorites(true)}\n        className=\"favorites-button\"\n      >\n        View Favorites\n      </button>\n      {loading ? (\n        <Loader />\n      ) : showFavorites ? (\n        <div className=\"favorites-list\">\n          <h2>Favorites</h2>\n          {favorites.length > 0 ? (\n            favorites.map((movie) => (\n              <div key={movie.imdbID} className=\"card\">\n                <Link\n                  to={`/movie/${encodeURIComponent(movie.Title)}`}\n                  className=\"card-link\"\n                >\n                  <div className=\"star-container\">\n                    <Star\n                      isFavorite={true}\n                      onToggle={() => handleFavoriteToggle(movie)}\n                    />\n                  </div>\n                  <h3>{movie.Title}</h3>\n                  {movie.Poster && (\n                    <img\n                      src={movie.Poster}\n                      alt={`${movie.Title} Poster`}\n                      className=\"card-container\"\n                    />\n                  )}\n                </Link>\n              </div>\n            ))\n          ) : (\n            <p>No favorites added yet.</p>\n          )}\n        </div>\n      ) : (\n        movieData && (\n          <div className=\"search-results\">\n            <div className=\"card\">\n              <div className=\"star-container\">\n                <Star\n                  isFavorite={\n                    !!favorites.find((fav) => fav.imdbID === movieData.imdbID)\n                  }\n                  onToggle={() => handleFavoriteToggle(movieData)}\n                />\n              </div>\n              <h1>{movieData.Title}</h1>\n              <p>Release Date: {movieData.Released}</p>\n\n              {movieData.Poster ? (\n                <img src={movieData.Poster} alt={`${movieData.Title} Poster`} />\n              ) : (\n                <p>No poster available</p>\n              )}\n            </div>\n          </div>\n        )\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,QAAQ,QACH,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,MAAM;IAC/C,MAAMuB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}